// Generated by gencpp from file hand_controller/rubbingWithForce.msg
// DO NOT EDIT!


#ifndef HAND_CONTROLLER_MESSAGE_RUBBINGWITHFORCE_H
#define HAND_CONTROLLER_MESSAGE_RUBBINGWITHFORCE_H

#include <ros/service_traits.h>


#include <hand_controller/rubbingWithForceRequest.h>
#include <hand_controller/rubbingWithForceResponse.h>


namespace hand_controller
{

struct rubbingWithForce
{

typedef rubbingWithForceRequest Request;
typedef rubbingWithForceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct rubbingWithForce
} // namespace hand_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hand_controller::rubbingWithForce > {
  static const char* value()
  {
    return "a7c598bb551ac19d777f4b6aceec6663";
  }

  static const char* value(const ::hand_controller::rubbingWithForce&) { return value(); }
};

template<>
struct DataType< ::hand_controller::rubbingWithForce > {
  static const char* value()
  {
    return "hand_controller/rubbingWithForce";
  }

  static const char* value(const ::hand_controller::rubbingWithForce&) { return value(); }
};


// service_traits::MD5Sum< ::hand_controller::rubbingWithForceRequest> should match 
// service_traits::MD5Sum< ::hand_controller::rubbingWithForce > 
template<>
struct MD5Sum< ::hand_controller::rubbingWithForceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hand_controller::rubbingWithForce >::value();
  }
  static const char* value(const ::hand_controller::rubbingWithForceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_controller::rubbingWithForceRequest> should match 
// service_traits::DataType< ::hand_controller::rubbingWithForce > 
template<>
struct DataType< ::hand_controller::rubbingWithForceRequest>
{
  static const char* value()
  {
    return DataType< ::hand_controller::rubbingWithForce >::value();
  }
  static const char* value(const ::hand_controller::rubbingWithForceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hand_controller::rubbingWithForceResponse> should match 
// service_traits::MD5Sum< ::hand_controller::rubbingWithForce > 
template<>
struct MD5Sum< ::hand_controller::rubbingWithForceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hand_controller::rubbingWithForce >::value();
  }
  static const char* value(const ::hand_controller::rubbingWithForceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_controller::rubbingWithForceResponse> should match 
// service_traits::DataType< ::hand_controller::rubbingWithForce > 
template<>
struct DataType< ::hand_controller::rubbingWithForceResponse>
{
  static const char* value()
  {
    return DataType< ::hand_controller::rubbingWithForce >::value();
  }
  static const char* value(const ::hand_controller::rubbingWithForceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HAND_CONTROLLER_MESSAGE_RUBBINGWITHFORCE_H
