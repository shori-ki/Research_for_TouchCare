// Generated by gencpp from file hand_controller/AddTrial.msg
// DO NOT EDIT!


#ifndef HAND_CONTROLLER_MESSAGE_ADDTRIAL_H
#define HAND_CONTROLLER_MESSAGE_ADDTRIAL_H

#include <ros/service_traits.h>


#include <hand_controller/AddTrialRequest.h>
#include <hand_controller/AddTrialResponse.h>


namespace hand_controller
{

struct AddTrial
{

typedef AddTrialRequest Request;
typedef AddTrialResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AddTrial
} // namespace hand_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hand_controller::AddTrial > {
  static const char* value()
  {
    return "0dc24b7f1f2931dc1f963137493e45ae";
  }

  static const char* value(const ::hand_controller::AddTrial&) { return value(); }
};

template<>
struct DataType< ::hand_controller::AddTrial > {
  static const char* value()
  {
    return "hand_controller/AddTrial";
  }

  static const char* value(const ::hand_controller::AddTrial&) { return value(); }
};


// service_traits::MD5Sum< ::hand_controller::AddTrialRequest> should match 
// service_traits::MD5Sum< ::hand_controller::AddTrial > 
template<>
struct MD5Sum< ::hand_controller::AddTrialRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hand_controller::AddTrial >::value();
  }
  static const char* value(const ::hand_controller::AddTrialRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_controller::AddTrialRequest> should match 
// service_traits::DataType< ::hand_controller::AddTrial > 
template<>
struct DataType< ::hand_controller::AddTrialRequest>
{
  static const char* value()
  {
    return DataType< ::hand_controller::AddTrial >::value();
  }
  static const char* value(const ::hand_controller::AddTrialRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hand_controller::AddTrialResponse> should match 
// service_traits::MD5Sum< ::hand_controller::AddTrial > 
template<>
struct MD5Sum< ::hand_controller::AddTrialResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hand_controller::AddTrial >::value();
  }
  static const char* value(const ::hand_controller::AddTrialResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_controller::AddTrialResponse> should match 
// service_traits::DataType< ::hand_controller::AddTrial > 
template<>
struct DataType< ::hand_controller::AddTrialResponse>
{
  static const char* value()
  {
    return DataType< ::hand_controller::AddTrial >::value();
  }
  static const char* value(const ::hand_controller::AddTrialResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HAND_CONTROLLER_MESSAGE_ADDTRIAL_H
