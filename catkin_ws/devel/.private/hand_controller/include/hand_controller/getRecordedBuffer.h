// Generated by gencpp from file hand_controller/getRecordedBuffer.msg
// DO NOT EDIT!


#ifndef HAND_CONTROLLER_MESSAGE_GETRECORDEDBUFFER_H
#define HAND_CONTROLLER_MESSAGE_GETRECORDEDBUFFER_H

#include <ros/service_traits.h>


#include <hand_controller/getRecordedBufferRequest.h>
#include <hand_controller/getRecordedBufferResponse.h>


namespace hand_controller
{

struct getRecordedBuffer
{

typedef getRecordedBufferRequest Request;
typedef getRecordedBufferResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct getRecordedBuffer
} // namespace hand_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hand_controller::getRecordedBuffer > {
  static const char* value()
  {
    return "9f0d2e2dca63a66d6097c4b52389060c";
  }

  static const char* value(const ::hand_controller::getRecordedBuffer&) { return value(); }
};

template<>
struct DataType< ::hand_controller::getRecordedBuffer > {
  static const char* value()
  {
    return "hand_controller/getRecordedBuffer";
  }

  static const char* value(const ::hand_controller::getRecordedBuffer&) { return value(); }
};


// service_traits::MD5Sum< ::hand_controller::getRecordedBufferRequest> should match 
// service_traits::MD5Sum< ::hand_controller::getRecordedBuffer > 
template<>
struct MD5Sum< ::hand_controller::getRecordedBufferRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hand_controller::getRecordedBuffer >::value();
  }
  static const char* value(const ::hand_controller::getRecordedBufferRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_controller::getRecordedBufferRequest> should match 
// service_traits::DataType< ::hand_controller::getRecordedBuffer > 
template<>
struct DataType< ::hand_controller::getRecordedBufferRequest>
{
  static const char* value()
  {
    return DataType< ::hand_controller::getRecordedBuffer >::value();
  }
  static const char* value(const ::hand_controller::getRecordedBufferRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hand_controller::getRecordedBufferResponse> should match 
// service_traits::MD5Sum< ::hand_controller::getRecordedBuffer > 
template<>
struct MD5Sum< ::hand_controller::getRecordedBufferResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hand_controller::getRecordedBuffer >::value();
  }
  static const char* value(const ::hand_controller::getRecordedBufferResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_controller::getRecordedBufferResponse> should match 
// service_traits::DataType< ::hand_controller::getRecordedBuffer > 
template<>
struct DataType< ::hand_controller::getRecordedBufferResponse>
{
  static const char* value()
  {
    return DataType< ::hand_controller::getRecordedBuffer >::value();
  }
  static const char* value(const ::hand_controller::getRecordedBufferResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HAND_CONTROLLER_MESSAGE_GETRECORDEDBUFFER_H
