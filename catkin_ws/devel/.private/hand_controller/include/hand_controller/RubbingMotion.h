// Generated by gencpp from file hand_controller/RubbingMotion.msg
// DO NOT EDIT!


#ifndef HAND_CONTROLLER_MESSAGE_RUBBINGMOTION_H
#define HAND_CONTROLLER_MESSAGE_RUBBINGMOTION_H

#include <ros/service_traits.h>


#include <hand_controller/RubbingMotionRequest.h>
#include <hand_controller/RubbingMotionResponse.h>


namespace hand_controller
{

struct RubbingMotion
{

typedef RubbingMotionRequest Request;
typedef RubbingMotionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RubbingMotion
} // namespace hand_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::hand_controller::RubbingMotion > {
  static const char* value()
  {
    return "558b361be41d47909cd85fcfff79812b";
  }

  static const char* value(const ::hand_controller::RubbingMotion&) { return value(); }
};

template<>
struct DataType< ::hand_controller::RubbingMotion > {
  static const char* value()
  {
    return "hand_controller/RubbingMotion";
  }

  static const char* value(const ::hand_controller::RubbingMotion&) { return value(); }
};


// service_traits::MD5Sum< ::hand_controller::RubbingMotionRequest> should match 
// service_traits::MD5Sum< ::hand_controller::RubbingMotion > 
template<>
struct MD5Sum< ::hand_controller::RubbingMotionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::hand_controller::RubbingMotion >::value();
  }
  static const char* value(const ::hand_controller::RubbingMotionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_controller::RubbingMotionRequest> should match 
// service_traits::DataType< ::hand_controller::RubbingMotion > 
template<>
struct DataType< ::hand_controller::RubbingMotionRequest>
{
  static const char* value()
  {
    return DataType< ::hand_controller::RubbingMotion >::value();
  }
  static const char* value(const ::hand_controller::RubbingMotionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::hand_controller::RubbingMotionResponse> should match 
// service_traits::MD5Sum< ::hand_controller::RubbingMotion > 
template<>
struct MD5Sum< ::hand_controller::RubbingMotionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::hand_controller::RubbingMotion >::value();
  }
  static const char* value(const ::hand_controller::RubbingMotionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::hand_controller::RubbingMotionResponse> should match 
// service_traits::DataType< ::hand_controller::RubbingMotion > 
template<>
struct DataType< ::hand_controller::RubbingMotionResponse>
{
  static const char* value()
  {
    return DataType< ::hand_controller::RubbingMotion >::value();
  }
  static const char* value(const ::hand_controller::RubbingMotionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HAND_CONTROLLER_MESSAGE_RUBBINGMOTION_H
